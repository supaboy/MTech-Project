// Â© iamsupaboy


//@version=4
strategy("Pranjal's BackTesting Indicator",overlay=true)
res = input(title="Main Trend", type=input.resolution, defval="60",confirm = true)

CCI = 21
ATR = 10
Multiplier= 0.7
original = false
thisCCI = cci(close, CCI)
lastCCI = nz(thisCCI[1])


calcx()=> 
    bufferDn= max(high,high + Multiplier * ema(tr,ATR))
    bufferUp= min(low,low - Multiplier * ema(tr,ATR))
    if (thisCCI >= 0 and lastCCI < 0) 
        bufferUp := bufferDn[1]
    if (thisCCI <= 0 and lastCCI > 0) 
        bufferDn := bufferUp[1]

    if (thisCCI >= 0)
        if (bufferUp < bufferUp[1])
            bufferUp := bufferUp[1]
    else
        if (thisCCI <= 0)
            if (bufferDn > bufferDn[1])
                bufferDn := bufferDn[1]

   
    x = 0.0
    x := thisCCI >= 0 ?bufferUp:thisCCI <= 0 ?bufferDn:x[1]
    x

tempx = calcx()

calcswap() =>
    swap = 0.0
    swap := tempx>tempx[1]?1:tempx<tempx[1]?-1:swap[1]
    swap

tempswap = calcswap()

swap2=tempswap==1?color.green:color.red
swap3=thisCCI >=0 ?color.green :color.red
swap4=original?swap3:swap2


////////////////////////////////////////////////////////////////////////////////
// BACKTESTING RANGE
 
// From Date Inputs
fromDay = input(defval = 1, title = "From Day", minval = 1, maxval = 31)
fromMonth = input(defval = 4, title = "From Month", minval = 1, maxval = 12)
fromYear = input(defval = 2020, title = "From Year", minval = 1970)
 
// To Date Inputs
toDay = input(defval = 28, title = "To Day", minval = 1, maxval = 31)
toMonth = input(defval = 4, title = "To Month", minval = 1, maxval = 12)
toYear = input(defval = 2021, title = "To Year", minval = 1970)
 
// Calculate start/end date and time condition
startDate = timestamp(fromYear, fromMonth, fromDay, 00, 00)
finishDate = timestamp(toYear, toMonth, toDay, 00, 00)
time_cond = time >= startDate and time <= finishDate
 
////////////////////////////////////////////////////////////////////////////////


//display current timeframe's Trend

longStopPrice  = strategy.position_avg_price * 0.999

plot(tempx,color=swap4 == color.green ? color.green : swap4,transp=0,linewidth=3)
plot(series=(swap4==color.green) ? longStopPrice : na,
     color=color.yellow,
     linewidth=2, title="Long Stop Loss")

strategy.entry("Long", strategy.long, 1500.0, when = swap4==color.green and time_cond)
strategy.entry("Short", strategy.short, 1500.0, when = swap4==color.red and close<ema(close,200) and time_cond)

strategy.close("Long", when = swap4==color.red)
strategy.close("Short", when = swap4==color.green)
//strategy.exit("Long", stop=longStopPrice, when = swap4==color.red)


htfx = security(syminfo.tickerid,res,tempx,lookahead = barmerge.lookahead_on)
htfswap4 = security(syminfo.tickerid,res,swap4,lookahead = barmerge.lookahead_on)

plot(htfx,color=htfswap4,transp=0,linewidth=3)


//plotarrow( ? 1 : swap4[1] == color.yellow and swap4 == color.blue ? -1 :0 , title="Up Entry Arrow", colorup=color.green,colordown = color.blue, maxheight=10, minheight=10, transp=0)

plotshape( swap4[1] == color.red and swap4 == color.green ? 1 : na , style = shape.triangleup , color = color.blue , location = location.belowbar , size = size.small )
plotshape( swap4[1] == color.green and swap4 == color.red ? 1 : na , style = shape.triangledown , color = color.red , location = location.abovebar , size = size.small)




buy =  swap4[1] == color.red and swap4 == color.green and htfswap4 == color.green

sell =  swap4[1] == color.green and swap4 == color.red and htfswap4 == color.red



    
    
///////////////study("EMA ", overlay=true)
plot(ema(close, 200), color=#FF7000, linewidth=2, title='200 Day EMA')
plot(ema(close, 21), color=#0000FF, linewidth=2, title='21 Day EMA')



